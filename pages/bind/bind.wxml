<!-- This is our View -->
<view>Hello {{ name }}!</view>
<button type="primary" bindtap="changeName">Click me!</button>

<!-- 数据绑定 -->
<text id="item-{{ id }}">{{ message }}</text>

<!-- 列表渲染 -->
<view wx:for="{{ array }}">{{ item }}</view>

<!-- 条件渲染 -->
<view wx:if="{{ view == 'WEBVIEW' }}">WEBVIEW</view>
<view wx:elif="{{ view == 'APP' }}">APP</view>
<view wx:else="{{ view == 'MINA' }}">MINA</view>

<!-- 定义模板 -->
<template name="staffName">
    <view>
        FirstName:{{ firstName }},LastName:{{ lastName }}
    </view>
</template>
<!-- 使用模板 -->
<template is="staffName" data="{{...staffA}}"></template>
<template is="staffName" data="{{...staffB}}"></template>
<template is="staffName" data="{{...staffC}}"></template>

<!-- 事件 -->
<view bindtap="add">{{ count }}</view>

<!-- 三元运算 -->
<view hidden="{{ flag?true:false }}">Hidden</view>

<!-- 算数运算 -->
<view>{{ a+b }} + {{ c }} + d </view>

<!-- 逻辑判断 -->
<view wx:if="{{ length > 5 }}">逻辑判断</view>

<!-- 字符串运算 -->
<view>{{ "hello " + name }}</view>

<!-- 组合-数组 -->
<view wx:for="{{ [zero,1,2,3,4] }}">{{ item }}</view>

<!-- 组合-对象 -->
<!-- 也可以用扩展运算符 ... 来将一个对象展开 -->
<template is="objectCombine" data="{{ for:a,bar:b }}"></template>

<!-- 展运算符 ... 来将一个对象展开 -->
<!--<template is="objectCombine" data="{{..obj1,...obj2,e:5 }}"></template>-->

<!-- block组件 -->
<!--<block wx:if="{{ true }}">
    <view>view1</view>
    <view>view2</view>
</block>-->

<!-- wx:for嵌套 -->
<!--<view wx:for="{{[1,2,3,4,5,6,7,8,9]}}" wx:for-item="i">
    <view wx:for="{{[1,2,3,4,5,6,7,8,9]}}" wx:for-item="j">
        <view wx:if="{{i<=j}}">
            {{i}} * {{j}} = {{i*j}}
        </view>
    </view>
</view>-->

<!-- 定义模板 -->
<!-- 使用name属性，作为模板的名字 -->
<!--
    inde:int
    msg:string
    time:string
-->
<template name="msgItem">
    <view>
        <text>{{ index }}:{{ msg }}</text>
        <text>Time:{{ time }}</text>
    </view>
</template>

<!-- 使用模板 -->
<!-- 使用 is 属性，声明需要使用的模板，然后将模板所需要的 data 传入 -->
<template is="msgItem" data="{{ ...item }}" />

<!-- is 属性可以使用 Mustache 语法 -->
<template name="odd">
    <view>odd</view>
</template>
<template name="even">
    <view>even</view>
</template>

<!-- 模板拥有自己的作用域，只能使用data传入的数据 -->
<block wx:for="{{ [1,2,3,4,5] }}">
    <template is="{{ item % 2 == 0 ? 'even':'odd' }}" />
</block>